{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "dp-metadata",
  "description": "Standard description of processes within a data pipeline. This schema definition aims at providing a standard metadata data structure for defining how the schema of an origin data model is mapped to the schema of a target data model. Enabling loose coupling of a selected tool in the tool-chain used in a data integration implementation.",
  "definitions": {
    "ColumnDefinition": {
      "description": "Describes an individual data element available in a data set.",
      "type": "object",
      "properties": {
        "column_name": {
          "description": "Unique name which identifies the column.",
          "type": "string"
        },
        "data_type": {
          "description": "Text label of the data type, including precision or max length.",
          "type": "string"
        },
        "max_length": {
          "description": "TODO: determine if this is required",
          "type": "integer"
        },
        "precision": {
          "description": "TODO: determine if this is required",
          "type": "integer"
        },
        "scale": {
          "description": "TODO: determine if this is required",
          "type": "integer"
        },
        "extension": {
          "description": "Extention point for adding custom properties for specific implementations or plugin libraries.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      },
      "required": [
        "column_name"
      ],
      "dependencies": {
        "max_length": [
          "data_type"
        ],
        "precision": [
          "data_type"
        ],
        "scale": [
          "precision"
        ]
      },
      "additionalProperties": false
    },
    "Transform": {
      "description": "Where the source is a computation of functions, multiple columns, or literals.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "type": {
          "description": "Currently restricted to options supported by library. This needs to be relaxed once introduce plug-ins.",
          "type": "string",
          "enum": [
            "SQL Expression"
          ]
        },
        "code": {
          "description": "The block of code to be run. Depending on the language type, this may be required to be a single statement.",
          "type": "string"
        },
        "extension": {
          "description": "Extention point for adding custom properties for specific implementations or plugin libraries.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      },
      "required": [
        "type",
        "code"
      ],
      "additionalProperties": false
    },
    "MappedObject": {
      "description": "Identifies a database object which represents a data set. When represents a source, then may be read only. When represents a target, then must be writable.",
      "type": "object",
      "properties": {
        "connection_key": {
          "description": "Required. The unique identifier of a centrally managed connection to a data store.",
          "type": "string"
        },
        "object_schema": {
          "description": "Optional. Namespace, owner, or security context of the datastore",
          "type": "string"
        },
        "object_name": {
          "description": "Required. Unique identifier of the datastore.",
          "type": "string"
        },
        "key_columns": {
          "description": "Optional. Columns which make up the key of the dataset.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnDefinition"
          }
        },
        "extension": {
          "description": "Extention point for adding custom properties for specific implementations or plugin libraries.",
          "type": "array",
          "items": {
            "type": "object"
          },
          "minItems": 0,
          "uniqueItems": true
        }
      },
      "required": [
        "connection_key",
        "object_name"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "source": {
      "$ref": "#/definitions/MappedObject"
    },
    "target": {
      "$ref": "#/definitions/MappedObject"
    },
    "mapped_columns": {
      "description": "This describes which target columns are to be populated, and from which source data or transform. It is not required to populate all target columns, nor use all source columns.",
      "type": "array",
      "items": {
        "description": "mapping",
        "type": "object",
        "oneOf": [
          {
            "properties": {
              "source": {
                "$ref": "#/definitions/ColumnDefinition"
              },
              "target": {
                "$ref": "#/definitions/ColumnDefinition"
              }
            },
            "required": [
              "source",
              "target"
            ],
            "additionalProperties": false
          },
          {
            "properties": {
              "transform": {
                "$ref": "#/definitions/Transform"
              },
              "target": {
                "$ref": "#/definitions/ColumnDefinition"
              }
            },
            "required": [
              "transform",
              "target"
            ],
            "additionalProperties": false
          }
        ]
      },
      "minItems": 1,
      "uniqueItems": true
    },
    "ignore_on_refresh": {
      "description": "Lists columns explicitly excluded from the mapping. For use cases where it is usefull to be able to destinguish purposefully skipped columns from newly added columns.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ColumnDefinition"
      },
      "minItems": 0,
      "uniqueItems": true
    },
    "extension": {
      "description": "Extention point for adding custom properties for specific implementations or plugin libraries.",
      "type": "array",
      "items": {
        "type": "object"
      },
      "minItems": 0,
      "uniqueItems": true
    }
  },
  "required": [
    "source",
    "target",
    "mapped_columns"
  ],
  "additionalProperties": false
}
